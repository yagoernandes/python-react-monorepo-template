version: '3'
services:
  portal:
    build:
      context: ./portal
      dockerfile: dev.Dockerfile
    ports:
      - "3000:3000"
    container_name: portal
    stdin_open: true
    volumes:
      - ./portal:/usr/src/app/portal
      - /usr/src/app/portal/node_modules

  api:
    build:
      context: ./api
      dockerfile: dev.Dockerfile
    ports:
      - "5000:5000"
    container_name: universal-api
    stdin_open: true
    volumes:
      - ./api:/codes/api


  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data

  # mongo:
  #   image: mongo:3.4
  #   container_name: mongo
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=admin
  #     - MONGO_INITDB_DATABASE=admin
  #     - MONGO_INITDB_ROOT_HOSTNAME=mongo
  #     - MONGO_INITDB_ROOT_PORT=27017
  #   volumes:
  #     - ./mongo:/data/db

  # kafka:
  #   image: confluentinc/cp-kafka:4.0.0
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
  #     - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
  #   volumes:
  #     - ./kafka:/opt/kafka/config
  #     - ./kafka/data:/opt/kafka/data
  #     - ./kafka/logs:/opt/kafka/logs

  # mailhog:
  #   image: mailhog/mailhog
  #   restart: always
  #   ports:
  #     - 1025:1025
  #     - 8025:8025